const e=/\/items\/([^-]+)\/([^-?]+)/;var t=({init:t},{services:n,database:i,getSchema:c,logger:r})=>{const{ItemsService:a}=n;async function o(t,n,o){if("PATCH"!==t.method||!t.body)return o();if(!e.test(t.url))return o();const{collection:s,id:l}=function(t){const n=t.match(e);return{collection:n[1],id:n[2]}}(t.url),d=new a(s,{knex:i,schema:await c(),accountability:t.accountability}),f=[];for(const[e,n]of Object.entries(t.body))if("string"==typeof n&&n.startsWith("increment(")){const t=n.replace("increment(","").replace(")","").replace(",",""),i=t.includes(".")?parseFloat(t):parseInt(t);f.push({field:e,inc:i})}const u=await d.readOne(l,{fields:f.map((({field:e})=>e))});for(const{field:e,inc:n}of f)t.body.hasOwnProperty(e)&&u.hasOwnProperty(e)&&(r.debug(`incremented field ${s}.${e} by ${n}`),t.body[e]=u[e]+n);o()}t("middlewares.after",(({app:e})=>e.use(o)))};export{t as default};
